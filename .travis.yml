# Copyright 2017 Xaptum, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License

language: c

compiler: gcc

env:
  global:
    - LIBSODIUM_DIR=${TRAVIS_BUILD_DIR}/libsodium
    - AMCL_DIR=${TRAVIS_BUILD_DIR}/milagro-crypto-c/install
    - ECDAA_CURVES=FP256BN,BN254
    - CFLAGS=-I${LIBSODIUM_DIR}/include/
    - LDFLAGS=-L${LIBSODIUM_DIR}/lib/
    - LD_LIBRARY_PATH=${LIBSODIUM_DIR}/lib/

jobs:
  include:

  # Release build, gcc
  - env: TYPE=RELEASE
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=Release -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON
    script:
      - cmake --build . -- -j2
      - ctest -VV

  # Debug build, to get code coverage with gcov
  - env: TYPE=DEBUG_WITH_COVERAGE
    before_install:
      - pip install --user cpp-coveralls
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=DebugWithCoverage -DCMAKE_C_OUTPUT_EXTENSION_REPLACE=ON -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON
    script:
      - cmake --build . -- -j2
      - ctest -VV
    after_success:
      - coveralls --exclude examples --exclude amcl --exclude ${LIBSODIUM_DIR}

  # Release build, clang
  - env: TYPE=RELEASE-WITH-CLANG
    compiler: clang
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=Release -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON
    script:
      - cmake --build . -- -j2
      - ctest -VV

  # cppcheck
  - env: TYPE=CPPCHECK
    addons:
      apt:
        packages:
          - cppcheck
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=Release -DECDAA_CURVES=${ECDAA_CURVES}
    script:
      - cmake --build . -- -j2
      - .travis/run-cppcheck.sh

  # Memcheck
  - env: TYPE=MEMCHECK
    addons:
      apt:
        packages:
          - valgrind
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=RelWithDebInfo -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON
    script:
      - cmake --build . -- -j2
      - ctest -VV -E benchmarks -T memcheck
    after_failure:
      - .travis/show-memcheck-results.sh ${TRAVIS_BUILD_DIR}
  
  # Scan-build
  - env: TYPE=SCAN_BUILD
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
    script:
      - .travis/run-scanbuild.sh ${TRAVIS_BUILD_DIR} ${TRAVIS_BUILD_DIR}

  # Sanitizers
  - env: TYPE=SANITIZE
    compiler: clang
    before_script:
      - .travis/install-libsodium.sh ${LIBSODIUM_DIR}
      - .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES}
      - cmake . -DCMAKE_BUILD_TYPE=RelWithSanitize -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON
    script:
      - cmake --build . -- -j2
      - ctest -VV -E benchmarks

  # Coverity scan
  - if: branch = coverity_scan
    env: TYPE=COVERITY_SCAN
    env:
      - secure: "jZ3ilXiiqM2qdkPXkOow0RqHz9eA4zZwZbhDKjBfL2wFEiV8u9u5GSzXjLZ6++oh5UzIyp/UdfLyN7vp1+mm7XSYx9X3TeLCmhmP/PZkys/YzrBgTeIxgLubekI4kOa9YdgPQ+d35Nm0AXngw2WrSaefeeKeaRTn/LFAfI5SYlhBXnnZmsRORuCCWDoSWDwvjIUGzcEqpq0uJ+C5Dps8gSExBUFyEkQ5tyaZvCxfujfwB6yP/wDgJzeQL+gSe47/RFinYqJeSvWBViwrGk78sCAZtbHaPy9HbqLUKSslb6WlPMecVbV+kqcN7i4b/bbr68WGDN2fEMzdlBIYJRkhtYFB3nR3T7mh50HQ8l9ZZmWkKekoU9YDcCuRb4HeA20bNF5U/bVFZSnfQPDOXAKnT+jlzAgH3XNEo2YeaCPNLnHZexrGKu9VedzvmCKFjTAW3oj096TLMgon3yg2Wax3XXV7UE0SiRkS9h0P6K1vW+CVKDll6KN5uaRGe4mOOo8Mlb+6l+iagrYpksk4fi4KhhuRkGLOeixNxVWjupaML7C/ShrOzj5XxMkVVgI8Jh7ucY7HguTQW2s6VurZ58jzaqmFBZwZgQ+m1uT7cKnnBBWsL84NVJ1jedPcf034kkxoGABtHWzRGP5gKf3RJTsS7nAwkNXBctKkoNJQ7bQVitM="
    addons:
      coverity_scan:
        project:
          name: "xaptum/ecdaa"
          description: "A C implementation of elliptic-curve-based Direct Anonymous Attestation signatures"
        notification_email: ecdaa-coverity-reports@xaptum.com
        build_command_prepend: ".travis/install-libsodium.sh ${LIBSODIUM_DIR} && .travis/install-amcl.sh ${AMCL_DIR} ${ECDAA_CURVES} && cmake . -DCMAKE_BUILD_TYPE=Release -DECDAA_CURVES=${ECDAA_CURVES} -DBUILD_EXAMPLES=ON"
        build_command:   "cmake --build ."
        branch_pattern: coverity_scan

    before_install:
      - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
    script:
      - echo "Done"
